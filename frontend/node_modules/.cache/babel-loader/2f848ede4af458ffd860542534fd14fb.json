{"ast":null,"code":"import _slicedToArray from\"/Users/jdmoore7/Documents/todo_drf/frontend/todo-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import logo from'./logo.svg';import'./App.css';import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var getCookie=function getCookie(name){var cookieValue=null;if(document.cookie&&document.cookie!==\"\"){var cookies=document.cookie.split(';');for(var i=0;i<cookies.length;i++){var cookie=cookies[i].trim();if(cookie.substring(0,name.length+1)===name+'='){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}return cookieValue;};var _useState=useState(''),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var submit=function submit(event){event.preventDefault();fetch('http://127.0.0.1:8000/api/task-create/',{method:'POST',headers:{'content-type':'application/json','X-CSRFToken':getCookie('csrftoken')},body:JSON.stringify({id:null,title:event.target.value,completed:false})});};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"todo item\",value:data,onChange:function onChange(event){setData(event.targetvalue);}}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",name:\"submit new todo\"})]});}export default App;","map":{"version":3,"sources":["/Users/jdmoore7/Documents/todo_drf/frontend/todo-react/src/App.js"],"names":["logo","React","useState","App","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","data","setData","submit","event","preventDefault","fetch","method","headers","body","JSON","stringify","id","title","target","value","completed","targetvalue"],"mappings":"4IAAA,MAAOA,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CAEb,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAU,CAC1B,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CACA,GAAIC,QAAQ,CAACC,MAAT,EAAmBD,QAAQ,CAACC,MAAT,GAAoB,EAA3C,CAA8C,CAC5C,GAAIC,CAAAA,OAAO,CAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAC,CAAX,CAAcA,CAAC,CAACF,OAAO,CAACG,MAAxB,CAAgCD,CAAC,EAAjC,CAAoC,CAClC,GAAIH,CAAAA,MAAM,CAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CACA,GAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,CAAmBT,IAAI,CAACO,MAAL,CAAY,CAA/B,IAAqCP,IAAI,CAAC,GAA9C,CAAmD,CACjDC,WAAW,CAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,CAAa,CAA9B,CAAD,CAAhC,CACA,MACD,CACF,CACF,CACD,MAAON,CAAAA,WAAP,CACD,CAbD,CAeA,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOc,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CACxBA,KAAK,CAACC,cAAN,GACAC,KAAK,CAAC,wCAAD,CACC,CAACC,MAAM,CAAC,MAAR,CACGC,OAAO,CAAC,CAAC,eAAe,kBAAhB,CACC,cAAcnB,SAAS,CAAC,WAAD,CADxB,CADX,CAIGoB,IAAI,CAACC,IAAI,CAACC,SAAL,CAAe,CACjBC,EAAE,CAAE,IADa,CAEjBC,KAAK,CAACT,KAAK,CAACU,MAAN,CAAaC,KAFF,CAGjBC,SAAS,CAAE,KAHM,CAAf,CAJR,CADD,CAAL,CAUD,CAZD,CAcA,mBACE,cAAM,QAAQ,CAAEb,MAAhB,wBACE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,WAFP,CAGE,KAAK,CAAEF,IAHT,CAIE,QAAQ,CAAE,kBAAAG,KAAK,CAAI,CAACF,OAAO,CAACE,KAAK,CAACa,WAAP,CAAP,CAA2B,CAJjD,EADF,cAOE,cACE,IAAI,CAAC,QADP,CAEE,IAAI,CAAC,iBAFP,EAPF,GADF,CAeD,CAED,cAAe7B,CAAAA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n  \n  const getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== \"\"){\n      let cookies = document.cookie.split(';');\n      for (let i=0; i<cookies.length; i++){\n        let cookie = cookies[i].trim();\n        if (cookie.substring(0,name.length+1)===(name+'=')){\n          cookieValue = decodeURIComponent(cookie.substring(name.length +1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n    \n  const [data, setData] = useState('');\n  \n  const submit = (event) => {\n    event.preventDefault()\n    fetch('http://127.0.0.1:8000/api/task-create/',\n          {method:'POST',\n             headers:{'content-type':'application/json',\n                      'X-CSRFToken':getCookie('csrftoken')\n              },\n             body:JSON.stringify({\n                id: null,    \n                title:event.target.value,\n                completed: false})\n          })\n  } \n\n  return(\n    <form onSubmit={submit}>\n      <input \n        type=\"text\"\n        name=\"todo item\"\n        value={data}\n        onChange={event => {setData(event.targetvalue)}}\n      />\n      <input \n        type=\"submit\" \n        name=\"submit new todo\"\n      />\n    </form>\n  )\n\n}\n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}