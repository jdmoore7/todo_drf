{"ast":null,"code":"var _jsxFileName = \"/Users/jdmoore7/Documents/todo_drf/frontend/todo-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const getCookie = name => {\n    let cookieValue = null;\n\n    if (document.cookie && document.cookie !== \"\") {\n      let cookies = document.cookie.split(';');\n\n      for (let i = 0; i < cookies.length; i++) {\n        let cookie = cookies[i].trim();\n\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  };\n\n  const [data, setData] = useState('');\n\n  const submit = event => {\n    event.preventDefault();\n    fetch('http://127.0.0.1:8000/api/task-create/', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'X-CSRFToken': getCookie('csrftoken')\n      },\n      body: JSON.stringify({\n        id: null,\n        title: event.target.value,\n        completed: false\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"todo item\",\n      value: data,\n      onChange: event => {\n        setData(event.targetvalue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      name: \"submit new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"C23+RLRwI6JvI86s3uCPD/CulQc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jdmoore7/Documents/todo_drf/frontend/todo-react/src/App.js"],"names":["logo","React","useState","App","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","data","setData","submit","event","preventDefault","fetch","method","headers","body","JSON","stringify","id","title","target","value","completed","targetvalue"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,SAAS,GAAIC,IAAD,IAAU;AAC1B,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA8C;AAC5C,UAAIC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,OAAO,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAClC,YAAIH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb;;AACA,YAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAmBT,IAAI,CAACO,MAAL,GAAY,CAA/B,MAAqCP,IAAI,GAAC,GAA9C,EAAmD;AACjDC,UAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAa,CAA9B,CAAD,CAAhC;AACA;AACD;AACF;AACF;;AACD,WAAON,WAAP;AACD,GAbD;;AAeA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMgB,MAAM,GAAIC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAAC,wCAAD,EACC;AAACC,MAAAA,MAAM,EAAC,MAAR;AACGC,MAAAA,OAAO,EAAC;AAAC,wBAAe,kBAAhB;AACC,uBAAcnB,SAAS,CAAC,WAAD;AADxB,OADX;AAIGoB,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,EAAE,EAAE,IADa;AAEjBC,QAAAA,KAAK,EAACT,KAAK,CAACU,MAAN,CAAaC,KAFF;AAGjBC,QAAAA,SAAS,EAAE;AAHM,OAAf;AAJR,KADD,CAAL;AAUD,GAZD;;AAcA,sBACE;AAAM,IAAA,QAAQ,EAAEb,MAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,KAAK,EAAEF,IAHT;AAIE,MAAA,QAAQ,EAAEG,KAAK,IAAI;AAACF,QAAAA,OAAO,CAACE,KAAK,CAACa,WAAP,CAAP;AAA2B;AAJjD;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhDQ7B,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n  \n  const getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== \"\"){\n      let cookies = document.cookie.split(';');\n      for (let i=0; i<cookies.length; i++){\n        let cookie = cookies[i].trim();\n        if (cookie.substring(0,name.length+1)===(name+'=')){\n          cookieValue = decodeURIComponent(cookie.substring(name.length +1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n    \n  const [data, setData] = useState('');\n  \n  const submit = (event) => {\n    event.preventDefault()\n    fetch('http://127.0.0.1:8000/api/task-create/',\n          {method:'POST',\n             headers:{'content-type':'application/json',\n                      'X-CSRFToken':getCookie('csrftoken')\n              },\n             body:JSON.stringify({\n                id: null,    \n                title:event.target.value,\n                completed: false})\n          })\n  } \n\n  return(\n    <form onSubmit={submit}>\n      <input \n        type=\"text\"\n        name=\"todo item\"\n        value={data}\n        onChange={event => {setData(event.targetvalue)}}\n      />\n      <input \n        type=\"submit\" \n        name=\"submit new todo\"\n      />\n    </form>\n  )\n\n}\n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}